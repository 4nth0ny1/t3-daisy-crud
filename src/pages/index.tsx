import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";
import type { Post } from "../types";
import { useState } from "react";

type PostProps = {
  post: Post;
};

const Post = ({ post }: PostProps) => {
  const { id, content } = post;

  return (
    <div className="p-4 text-center" key={id}>
      <div className="card w-96 bg-base-100 shadow-xl">
        <div className="card-body">
          <h2 className="card-title">Post</h2>
          <p>{content}</p>
          <div className="card-actions justify-end">
            <button className="btn-primary btn">Delete</button>
          </div>
        </div>
      </div>
    </div>
  );
};

const Posts = () => {
  const { data: posts, isLoading } = api.post.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;
  return (
    <div className="flex flex-row flex-wrap justify-center">
      {posts?.map((post) => (
        <Post key={post.id} post={post} />
      ))}
    </div>
  );
};

const CreatePost = () => {
  const [input, setInput] = useState("");

  const ctx = api.useContext();

  const { mutate } = api.post.create.useMutation({
    onSettled: async () => {
      await ctx.post.getAll.invalidate();
      setInput("");
    },
  });

  return (
    <form
      className="flex flex-row gap-4"
      onSubmit={(e) => {
        e.preventDefault();
        mutate(input);
      }}
    >
      <input
        type="text"
        placeholder="Type here"
        className="input-bordered input w-full max-w-xs"
        value={input}
        onChange={(e) => setInput(e.target.value)}
      />
      <button className="btn-primary btn">post</button>
    </form>
  );
};

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex w-full flex-col items-center">
        <h1 className="text-5xl">T3 Daisy Crud</h1>
        <AuthShowcase />
        <CreatePost />
        <Posts />
      </div>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full px-10 py-3 font-semibold no-underline transition"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
